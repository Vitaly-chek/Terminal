		JSON

1. Create an external repository called JSON;

2. Clone the JSON repository to the local computer - git clone URL;
 
3. Inside the local JSON create a file “new.json” - touch new.json;
 
4. Add a file under the git - git add new.json; 
 
5. Commit the file - git commit -m "new file";
 
6. Push the file to an external GitHub repository - git push;
 
7. Edit the content of the “new.json” file - write information about yourself (name, age, number of pets, future desired salary). Write everything in JSON format;
 
8. Push changes to an external repository - git commit -am "updated file" / git push;
 
9. Create file preferences.json - touch preferences.json;
 
10. In the preferences.json file, add information about your preferences (Favorite movie, favorite series, favorite food, favorite season, side you would like to visit) in JSON format;
 
11.  Create a skills.json file, add information about the skills that will be studied in the course in JSON format - touch skills.json;
 
12. Send 2 files at once to an external repository - git add . / git commit -am "new 2 files" / git push;
 
13. On the web interface, create a bug_report.json file;
 
14. Make Commit changes (save) changes on the web interface;
 
15. Modify the bug_report.json file on the web interface, add a bug report in JSON format;
 
16. Make Commit changes (save) changes on the web interface;
 
17. Synchronize external and local JSON repository - git pull.


		XML

1. Create an external repository called XML;

2. Clone the XML repository to the local computer - git clone URL;

3. Inside the local XML create a file “new.xml” - git touch new.xml;

4. Add a file under git - git add .;

5. Commit the file - git commit -m "create new file";

6. Send a file to an external GitHub repository - git push;

7. Edit the content of the “new.xml” file - write information about yourself (name, age, number of pets, future desired salary). Everything is written in XML format;

8. Push changes to an external repository - git commit -am "updated file" / git push;

9. Create file preferences.xml - touch preferences.xml;

10. In the preferences.xml file, add information about your preferences (Favorite movie, favorite TV series, favorite food, favorite season, side you would like to visit) in XML format;

11. Create a skills.xml file, add information about the skills that will be studied in the course in XML format - touch skills.xml;

12. Make a commit in one line - git add . && git commit -m "2 new files" or git commit -am "2 new files";

13. Send 2 files at once to an external repository - git push;

14. On the web interface, create the bug_report.xml file;

15. Make Commit changes (save) changes on the web interface;

16. Modify the bug_report.xml file on the web interface, add a bug report in XML format;

17. Make Commit changes (save) changes on the web interface;

18. Synchronize external and local XML repository - git pull.


		TXT

1. Create an external repository called TXT;

2. Clone the TXT repository to the local computer - git clone URL;

3. Inside the local TXT create a file “new.txt” - touch new.txt;

4. Add a file under git - git add .;

5. Commit the file - git commit -m "create new file";

6. Push the file to an external GitHub repository - git push;

7. Edit the contents of the “new.txt” file - write information about yourself (name, age, number of pets, future desired salary). Write everything in TXT format;

8. Push changes to an external repository - git commit -am "updated file";

9. Create file preferences.txt - touch preferences.txt;

10. Add information about your preferences (Favorite movie, favorite TV series, favorite food, favorite season, side you would like to visit) to the file preferences.txt in TXT format;

11. Create a skills.txt file, add information about the skills that were studied on the course in TXT format - touch skills.txt;

12. Make a commit in one line - git commit -am "new 2 files";

13. ОSend 2 files at once to an external repository - git push;

14. On the web interface, create a file bug_report.txt

15. Make Commit changes (save) changes on the web interface;

16. Modify the bug_report.txt file on the web interface, add a bug report in TXT format;

17. Make Commit changes (save) changes on the web interface;

18. Synchronize external and local TXT repository - git pull.
